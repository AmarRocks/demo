
package org.simonme.demo.cxf.client.user;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;

import org.apache.cxf.endpoint.Client;
import org.apache.cxf.frontend.ClientProxy;
import org.apache.cxf.interceptor.LoggingInInterceptor;
import org.apache.cxf.interceptor.LoggingOutInterceptor;
import org.apache.cxf.transport.http.HTTPConduit;
import org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

/**
 * This class was generated by Apache CXF 2.3.11
 * 2016-05-05T21:49:51.544+08:00
 * Generated source version: 2.3.11
 * 
 */
public final class UserService_UserServicePort_Client {

    private static final QName SERVICE_NAME = new QName("http://service.user.service.server.cxf.demo.simonme.org/", "UserServiceService");

    private UserService_UserServicePort_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
        URL wsdlURL = UserServiceService.WSDL_LOCATION;
        if (args.length > 0) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        UserServiceService ss = new UserServiceService(wsdlURL, SERVICE_NAME);
        UserService port = ss.getUserServicePort();  
        
        Client client = ClientProxy.getClient(port);
        client.getInInterceptors().add(new LoggingInInterceptor());
        client.getInInterceptors().add(new LoggingOutInterceptor());
        
        HTTPConduit http = (HTTPConduit) client.getConduit(); 
        HTTPClientPolicy httpClientPolicy = http.getClient() ;
        if(httpClientPolicy == null)
        {
            httpClientPolicy = new HTTPClientPolicy();
        }
//        httpClientPolicy.setAllowChunking(false);
        http.setClient(httpClientPolicy);
        
        
        System.out.println(client);
        {
        System.out.println("Invoking queryUser...");
        org.simonme.demo.cxf.client.user.User _queryUser_arg0 = new User();
        _queryUser_arg0.setId(1009);
        _queryUser_arg0.setName("rquestUserName");
        org.simonme.demo.cxf.client.user.User _queryUser__return = port.queryUser(_queryUser_arg0);
        System.out.println("queryUser.result=" + _queryUser__return);


        }

        System.exit(0);
    }

}
